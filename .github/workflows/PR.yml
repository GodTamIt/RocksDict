name: PR check

on:
  pull_request:
    branches: [ main ]

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        py_version: [3.7, 3.8, 3.9, "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py_version }}
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist
      - name: Install built wheel - universal2
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall
      - name: Python UnitTest
        run: |
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: ${{ matrix.target }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: 11.0
          directory: ${{ runner.temp }}/llvm-11.0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
        env:
          LIBCLANG_PATH: ${{ runner.temp }}/llvm-11.0/lib
      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686, aarch64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: x64
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: x64
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: stable
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
      - name: Install built wheel and test
        if: matrix.target == 'x86_64'
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, s390x, ppc64le, ppc64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: stable
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
      - uses: uraimo/run-on-arch-action@v2.0.5
        if: matrix.target != 'ppc64'
        name: Install built wheel and test
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            pip install rocksdict --no-index --find-links dist --force-reinstall
            python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
